@using AuthApp.Data.ViewModels;
@model LoginVM

@{
    ViewData["Title"] = "Login";

}

<div class="row d-flex align-items-center justify-content-center">
    <div class="col-md-6  p-3">
        <h2 class="text-center text-info">Login</h2>
        <form asp-action="Login" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-1">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>

            </div>

            <div class="mb-1">
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>

            </div>
            <div class="row">

                <div class="col-8">
                    <a asp-action="Register" class="text-decoration-none float-start mt-2">Don't have an account ?</a>
                </div>

                <div class="col-4">
                    <input type="submit" value="Login" class="btn btn-primary btn-sm float-end" />
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.querySelector('form').onsubmit = function () {
            var emailInput = document.querySelector('input[name="Email"]');
            var passwordInput = document.querySelector('input[name="Password"]');

            emailInput.value = emailInput.value.trim();
            passwordInput.value = passwordInput.value.trim();
        };
    </script>

}